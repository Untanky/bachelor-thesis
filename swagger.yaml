swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Blogging prototype"
  contact:
    email: "s0563265@htw-berlin.de"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "localhost:8080"
basePath: "/api/blog"
tags:
  - name: "blog"
    description: "Access, create and modify blog posts."
  - name: "comments"
    description: "create and modify comments on blog posts."
schemes:
  - "http"
paths:
  /post:
    get:
      tags:
      - "blog"
      summary: "Retrieve all the posts"
      description: "Retrieves all the posts stored in the system and returns them in JSON format."
      produces:
      - application/json
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              type: object
              allOf: 
              - $ref: "#/definitions/PostWithId"
    post:
      tags:
      - "blog"
      summary: "Create a new recipe"
      description: "Store a new recipe in the system. The recipe data must not contain an id as this is generated by the system. The body must be in JSON format."
      consumes:
      - application/json
      parameters:
      - in: "body"
        name: "body"
        description: "Post object to upload"
        required: true
        schema:
          $ref: "#/definitions/Post"
      responses:
        "204":
          description: "successful operation"
        "400":
          description: "request data not correct"
          schema:
            $ref: "#/definitions/Error"
  /post/{postId}:
    get:
      tags:
      - "blog"
      summary: "Retrieve a specific post"
      description: "Retrieves a specific post from the system. The data transmitted also contains the comments to that post. The response is in JSON format."
      produces:
      - application/json
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            allOf:
            - $ref: "#/definitions/PostWithId"
            - type: object
              properties:
                comments:
                  type: array
                  items:
                    type: object
                    allOf: 
                    - $ref: "#/definitions/CommentWithId"
        "400":
          description: "request data not correct"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "post not found"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "blog"
      summary: "Update a recipe"
      description: "Update a recipe from the request body. The request body must be in JSON format and must contain an id matching the id in the request path."
      consumes:
      - application/json
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Post object to upload"
        required: true
        schema:
          type: object
          allOf: 
          - type: object
            properties:
              id:
                type: integer
                format: int64
                example: 918273645
          - $ref: "#/definitions/Post"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "request data not correct"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "post not found"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "blog"
      summary: "Delete a post"
      description: "Deletes a post from the system."
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "request data not correct"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "post not found"
          schema:
            $ref: "#/definitions/Error"
  /post/{postId}/comment:
    post:
      tags:
      - "comments"
      summary: "Create a comment for the specified post"
      description: "Create a new comment for the specified post. The request body must be JSON format and must not contain an id"
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "Comment to attach to post"
        required: true
        schema:
          $ref: "#/definitions/Comment"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "request data not correct"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "post not found"
          schema:
            $ref: "#/definitions/Error"
  /post/{postId}/comment/{commentId}:
    put:
      tags:
      - "comments"
      summary: "Update the specified comment for the specified post"
      description: "Update the specified comment for the specified post. The request body must be JSON format and must contain an id that matches the commend id in the request path."
      consumes:
      - application/json
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post"
        required: true
        type: "integer"
        format: "int64"
      - name: "commentId"
        in: "path"
        description: "ID of comment to update"
        required: true
        type: "integer"
        format: "int64"
      - name: "body"
        in: "body"
        description: "Comment to attach to post"
        required: true
        schema:
          $ref: "#/definitions/CommentWithId"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "request data not correct"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "post not found"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "comments"
      summary: "Deletes the specified comment for the specified post"
      description: "Deletes the specified comment for the specified post."
      parameters:
      - name: "postId"
        in: "path"
        description: "ID of post"
        required: true
        type: "integer"
        format: "int64"
      - name: "commentId"
        in: "path"
        description: "ID of comment to update"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "request data not correct"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "post not found"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Post:
    type: object
    properties:
      title:
        type: string
        example: "Test Title"
      description:
        type: string
        example: "Test Description; might be a really long text"
      numberOfComments:
        type: integer
        format: int64
        example: 6
  PostWithId:
    type: object
    allOf: 
    - $ref: "#/definitions/Post"
    - type: object
      properties:
        id:
          type: integer
          format: int64
          example: 918273645
        url:
          type: string
          example: "/post/918273645"
  Comment: 
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 912912
      text:
        type: string
        example: "Example comment"
      url:
        type: string
        example: "/post/918273645/comment/912912"
  CommentWithId: 
    type: object
    allOf: 
    - $ref: "#/definitions/Post"
    - type: object
      properties:
        id:
          type: integer
          format: int64
          example: 918273645
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 404
      message: 
        type: string
        example: "not found"
